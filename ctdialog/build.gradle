apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 26
        versionName "1.7.3"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android.libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.name}_${defaultConfig.versionName}.aar"
        }
    }

}

task clearJar(type: Delete) {
    delete 'build/libs/CTDialog.jar'////这行表示如果你已经打过一次包了，再进行打包则把原来的包删掉
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/debug/') //这行表示要打包的文件的路径，根据下面的内容，其实是该路径下的classes.jar
    into('build/libs/')  //这行表示打包完毕后包的生成路径，也就是生成的包存在哪
    include('classes.jar')  //看到这行，如果你对分包有了解的话，你就可以看出来这行它只是将一些类打包了
    rename ('classes.jar', 'CTDialog.jar')
}

makeJar.dependsOn(clearJar, build)

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportVersion}"

    implementation 'jp.wasabeef:blurry:3.0.0'
}
